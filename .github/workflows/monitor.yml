name: DeepSeek Monitor

on:
  schedule:
    - cron: '30 */1 * * *'  # 每小时的30分运行（北京时间）
  workflow_dispatch:  # 支持手动触发

jobs:
  monitor:
    runs-on: ubuntu-22.04
    timeout-minutes: 10  # 增加超时时间到10分钟
    env:
      TZ: Asia/Shanghai  # 设置时区为北京时间
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libatspi2.0-0 \
          libcups2 \
          libdbus-1-3 \
          libdrm2 \
          libgbm1 \
          libgtk-3-0 \
          libnspr4 \
          libnss3 \
          libwayland-client0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxrandr2 \
          libxkbcommon0 \
          xvfb \
          fonts-noto-color-emoji \
          fonts-unifont
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browsers
      run: |
        python -m playwright install chromium --with-deps
        
    - name: Create env file
      run: |
        mkdir -p config
        echo "DEEPSEEK_API_KEY=${{ secrets.DEEPSEEK_API_KEY }}" >> config/.env
        echo "ENABLE_SERVERCHAN=${{ secrets.ENABLE_SERVERCHAN }}" >> config/.env
        echo "SERVERCHAN_KEY=${{ secrets.SERVERCHAN_KEY }}" >> config/.env
        echo "ENABLE_TELEGRAM=${{ secrets.ENABLE_TELEGRAM }}" >> config/.env
        echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> config/.env
        echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> config/.env
        
    - name: Create log directory
      run: mkdir -p logs
        
    - name: Run monitor
      id: monitor
      continue-on-error: true  # 允许监控脚本失败但继续执行后续步骤
      run: |
        # 运行一次监控检查后退出
        timeout 300 xvfb-run --auto-servernum python src/main.py || true
      env:
        PYTHONUNBUFFERED: 1
        
    - name: Send status notification
      if: always()  # 无论成功失败都发送状态通知
      run: |
        STATUS="${{ steps.monitor.outcome }}"
        if [ "$STATUS" = "success" ]; then
          TITLE="✅ DeepSeek监控检查完成"
          ICON="🟢"
        else
          TITLE="🚨 DeepSeek监控检查失败"
          ICON="🔴"
        fi
        
        curl -X POST \
          "https://sctapi.ftqq.com/${{ secrets.SERVERCHAN_KEY }}.send" \
          -d "title=${TITLE}" \
          -d "desp=${ICON} 检查时间: $(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')%0A%0A详细日志：%0A${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      continue-on-error: true
      
    - name: Clean up
      if: always()  # 无论成功失败都执行清理
      run: |
        rm -rf logs/*  # 清理日志文件
        rm -rf /tmp/.X*-lock || true  # 清理可能的X server锁文件 